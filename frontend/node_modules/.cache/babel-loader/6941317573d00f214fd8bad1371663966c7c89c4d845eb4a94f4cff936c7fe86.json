{"ast":null,"code":"var _jsxFileName = \"C:\\\\SpiritX_CrypticHackers_02\\\\frontend\\\\src\\\\Pages\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`Server error: ${errorData}`);\n      }\n      const data = await response.json();\n      if (!data.reply) {\n        throw new Error('No reply received from server');\n      }\n      const botMessage = {\n        role: 'bot',\n        content: data.reply\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error details:', error);\n      const errorMessage = {\n        role: 'bot',\n        content: `Error: ${error.message}`\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !isLoading) {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spiriter Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === 'user' ? 'user-message' : 'bot-message',\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message loading\",\n        children: \"Thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask something...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isLoading,\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"sVGGnSpJyr44tGn0fmOMIwNVzbg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","sendMessage","trim","userMessage","role","content","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","ok","errorData","text","Error","data","json","reply","botMessage","error","console","errorMessage","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/SpiritX_CrypticHackers_02/frontend/src/Pages/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = { role: 'user', content: input };\r\n        setMessages(prevMessages => [...prevMessages, userMessage]);\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chatbot', {\r\n                method: 'POST',\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const errorData = await response.text();\r\n                throw new Error(`Server error: ${errorData}`);\r\n            }\r\n        \r\n            const data = await response.json();\r\n            if (!data.reply) {\r\n                throw new Error('No reply received from server');\r\n            }\r\n            \r\n            const botMessage = { role: 'bot', content: data.reply };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n        } catch (error) {\r\n            console.error('Error details:', error);\r\n            const errorMessage = { \r\n                role: 'bot', \r\n                content: `Error: ${error.message}` \r\n            };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !isLoading) {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <h2>Spiriter Chatbot</h2>\r\n            <div className=\"chatbox\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={msg.role === 'user' ? 'user-message' : 'bot-message'}>\r\n                        {msg.content}\r\n                    </div>\r\n                ))}\r\n                {isLoading && (\r\n                    <div className=\"bot-message loading\">\r\n                        Thinking...\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={input} \r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Ask something...\"\r\n                    disabled={isLoading}\r\n                />\r\n                <button \r\n                    onClick={sendMessage} \r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? 'Sending...' : 'Send'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}